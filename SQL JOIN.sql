use mdb;
CREATE DATABASE MDB;
show databases;
SHOW TABLES;
DROP TABLE MYPRODUCT;
DROP DATABASE MDB; 
CREATE TABLE Product(
ID INT PRIMARY KEY AUTO_INCREMENT,
Name VARCHAR(255) NOT NULL
);
SELECT * FROM PRODUCT;
INSERT INTO PRODUCT(NAME) VALUES('AMERICAN');
INSERT INTO PRODUCT(NAME) VALUES('LATTEE');
INSERT INTO PRODUCT(NAME) VALUES('RED TEA');
INSERT INTO PRODUCT(NAME) VALUES('BLACK TEA');
DROP TABLE PRODUCT;
CREATE TABLE VARIANT (
id INT PRIMARY KEY AUTO_INCREMENT,
PRODUCT_ID INT,
VOLUME VARCHAR(255) NOT NULL,
PRICE int NOT NULL
);
INSERT INTO VARIANT(PRODUCT_ID, VOLUME, PRICE) VALUES(1, 'median', 40);
INSERT INTO VARIANT(PRODUCT_ID, VOLUME, PRICE) VALUES(1, 'LARGE', 50);
INSERT INTO VARIANT(PRODUCT_ID, VOLUME, PRICE) VALUES(2, 'median', 70);
INSERT INTO VARIANT(PRODUCT_ID, VOLUME, PRICE) VALUES(2, 'LARGE', 80);
INSERT INTO VARIANT(PRODUCT_ID, VOLUME, PRICE) VALUES(3, 'median', 90);
INSERT INTO VARIANT(PRODUCT_ID, VOLUME, PRICE) VALUES(3, 'LARGE', 100);
INSERT INTO VARIANT(PRODUCT_ID, VOLUME, PRICE) VALUES(5, 'MEDIAN', 200);
select * from variant;
select product_id, volume, price, (select AVG(price) from variant) as average_price from variant;
select product_id, volume, price from variant where product_id in (select name from product where price >80);
drop table variant;
SELECT * FROM PRODUCT INNER JOIN VARIANT ON PRODUCT.ID= VARIANT.PRODUCT_ID;  #SELECT * FROM 是全選
SELECT PRODUCT.NAME, VARIANT.VOLUME, VARIANT.PRICE FROM PRODUCT INNER JOIN VARIANT ON PRODUCT.ID= VARIANT.PRODUCT_ID;
SELECT * FROM PRODUCT LEFT JOIN VARIANT ON PRODUCT.ID= VARIANT.PRODUCT_ID;
SELECT * FROM PRODUCT RIGHT JOIN VARIANT ON PRODUCT.ID= VARIANT.PRODUCT_ID;
SELECT sum(PRICE) FROM VARIANT;
SELECT AVG(PRICE) FROM VARIANT;
SELECT COUNT(NAME) FROM PRODUCT; 
CREATE TABLE ORDERQ (
ORDER_ID INT PRIMARY KEY AUTO_INCREMENT,
ORDERDATE VARCHAR(255) NOT NULL,
PRODUCTNAME VARCHAR(255) NOT NULL,
QUANTITY INT NOT NULL,
AMOUNT INT NOT NULL,
USERID VARCHAR(255)
);
SELECT * FROM ORDERQ;
INSERT INTO ORDERQ(ORDER_ID, ORDERDATE, PRODUCTNAME, QUANTITY, AMOUNT, USERID) VALUES(1, '2023-10-15', 'SHOES', 2, 4, 1);
INSERT INTO ORDERQ(ORDER_ID, ORDERDATE, PRODUCTNAME, QUANTITY, AMOUNT, USERID) VALUES(2, '2023-10-15', 'SUITS', 500, 6000, 2);
INSERT INTO ORDERQ(ORDER_ID, ORDERDATE, PRODUCTNAME, QUANTITY, AMOUNT, USERID) VALUES(3, '2023-10-16', 'BOOKS', 200, 6464, 3);
INSERT INTO ORDERQ(ORDER_ID, ORDERDATE, PRODUCTNAME, QUANTITY, AMOUNT, USERID) VALUES(4, '2023-10-17', 'MEALS', 123, 477, 4);
DROP TABLE ORDERQ;
SELECT ORDERDATE, SUM(AMOUNT) FROM ORDERQ GROUP BY ORDERDATE;
SELECT PRODUCTNAME, MAX(QUANTITY) FROM ORDERQ GROUP BY PRODUCTNAME;
SELECT AVG(AMOUNT) FROM ORDERQ;
ALTER TABLE VARIANT ADD foreign key(PRODUCT_ID) REFERENCES PRODUCT(ID); 
DELETE FROM VARIANT WHERE PRODUCT_ID=3;
delete FROM PRODUCT where ID=3;
INSERT INTO PRODUCT(ID, NAME) VALUES(3, 'RED TEA');
SELECT * FROM PRODUCT;
SELECT * FROM VARIANT;
ALTER TABLE VARIANT ADD foreign key(PRODUCT_ID) references PRODUCT(ID);
DELETE FROM PRODUCT WHERE ID=1;
alter TABLE ORDERQ ADD INDEX INDEX_PRODUCT(PRODUCTNAME);
SELECT * FROM ORDERQ WHERE PRODUCTNAME='BOOKS';
EXPLAIN SELECT * FROM ORDERQ WHERE PRODUCTNAME='BOOKS';
SELECT * FROM VARIANT;
SELECT PRODUCT_ID, STD(PRICE) FROM VARIANT GROUP BY PRODUCT_ID;
SELECT PRODUCT_ID, avg(PRICE) FROM VARIANT GROUP BY PRODUCT_ID;
SELECT STD(PRICE), MAX(PRICE), AVG(PRICE), SUM(PRICE) FROM VARIANT;
SELECT VOLUME, AVG(PRICE) FROM VARIANT GROUP BY VOLUME; 
SELECT * FROM VARIANT INNER JOIN PRODUCT ON VARIANT.PRODUCT_ID=PRODUCT.ID;
SELECT PRODUCT_ID, NAME, AVG(VARIANT.PRICE) FROM VARIANT INNER JOIN PRODUCT ON VARIANT.PRODUCT_ID=PRODUCT.ID GROUP BY PRODUCT_ID;

